for isofile in $isopath/systemrescue*.iso; do
  if [ -e "$isofile" ]; then
    # Skip old ISOs
    if regexp "x86" "$isofile"; then continue; fi
    regexp --set=isoname "$isopath/(.*)" "$isofile"
    regexp --set=arch "systemrescuecd-([^-]*)" "$isoname"
    imgpath="(loop)/sysresccd/boot"
    if [ "$arch" = i686 ]; then
      imgpath="${imgpath}/i686"
    else
      imgpath="$imgpath/x86_64"
    fi
    submenu "$isoname ->" "$isofile" "$imgpath" {
      iso_path="$2"
      img_path="$3"
      loopback loop "$iso_path"
      probe --label --set=cd_label (loop)
      bootoptions="img_dev=$imgdevpath img_loop=$iso_path earlymodules=loop archisobasedir=sysresccd archisolabel=$cd_label"
      menuentry "Boot SystemRescueCd using default options" {
        linux $img_path/vmlinuz $bootoptions
        initrd (loop)/sysresccd/boot/intel_ucode.img (loop)/sysresccd/boot/amd_ucode.img $img_path/sysresccd.img
      }
      menuentry "Boot SystemRescueCd and copy system to RAM" {
        linux $img_path/vmlinuz $bootoptions copytoram
        initrd (loop)/sysresccd/boot/intel_ucode.img (loop)/sysresccd/boot/amd_ucode.img $img_path/sysresccd.img
      }
      menuentry "Run Memtest86+ (RAM test)" {
        bootoptions=""
        linux16 (loop)/sysresccd/boot/memtest $bootoptions
      }
    }
  fi
done
